importall Base.Random
importall Distributions
using DataStructures
importall PyPlot
using ProgressMeter

srand(1)
cd("/home/grad/msl33/Dropbox/pprocess/")
include("classes.jl")
include("poissonpointprocess.jl")
include("statespace.jl")
include("eigen.jl")
#=include("hierdatagen.jl")=#
#=include("fakerealdata.jl")=#



cell=cells["YKIC140130Loc_DoubleSound"]

fooA=SortedDict(Dict(zip(collect(0:0.005:1),cell["A"]["mean"])))
fooB=SortedDict(Dict(zip(collect(0:0.005:1),(cell["B"]["mean"]))))
Œº‚ÇÄ‚Çú(t)=invlogcdf(Normal(0,1),log((1/Œõ)*deref((fooA,searchsortedlast(fooA,t)))[2]))
Œº‚ÇÅ‚Çú(t)=invlogcdf(Normal(0,1),log((1/Œõ)*(deref((fooB,searchsortedlast(fooB,t)))[2])))


niter=1000
iter=1
œÉ¬≤‚Çò=9
k=0.1
a=1
œÉ¬≤=1.0

y‚ÇÄ=SortedDict(Dict{Float64}{Float64}())
y‚ÇÅ=SortedDict(Dict{Float64}{Float64}())


#initial values
Œº‚ÇÄ=0.0
Œº‚ÇÅ=0.0
empty!(y‚ÇÄ)
[merge!(y‚ÇÄ,trial.y‚ÇÄ) for trial in ABtrials];
f‚ÇÄ=SortedDict(Dict{Float64,Array{Float64,1}}())
for key in collect(keys(y‚ÇÄ))
	f‚ÇÄ[key]=zeros(Float64,3)
end
empty!(y‚ÇÅ)
[merge!(y‚ÇÅ,trial.y‚ÇÅ) for trial in ABtrials];
f‚ÇÅ=SortedDict(Dict{Float64,Array{Float64,1}}())
for key in collect(keys(y‚ÇÅ))
	f‚ÇÅ[key]=zeros(Float64,3)
end
≈Ç‚ÇÄ=0.1
≈Ç‚ÇÅ=0.1
p=0.5
≈Çg=30.0
œÅ¬≤‚ÇÄ=cell["A"]["variance"]
œÅ¬≤‚ÇÅ=cell["B"]["variance"]
œÅ¬≤g=3.0

trace=Dict()
trace["ABtrials"]=Dict()
for i=1:length(ABtrials)
	trace["ABtrials"][i]=zeros(Int64,niter)
end
trace["œÅ¬≤g"]=zeros(Float64,niter)
trace["p"]=zeros(Float64,niter)
trace["œÅ¬≤‚ÇÄ"]=zeros(Float64,niter)
trace["œÅ¬≤‚ÇÅ"]=zeros(Float64,niter)
trace["≈Çg"]=zeros(Float64,niter)
trace["≈Ç‚ÇÄ"]=zeros(Float64,niter)
trace["≈Ç‚ÇÅ"]=zeros(Float64,niter)
trace["Œº‚ÇÄ"]=zeros(Float64,niter)
trace["Œº‚ÇÅ"]=zeros(Float64,niter)
trace["Œõ"]=zeros(Float64,niter)
trace["Œº‚ÇÄ+f‚ÇÄ"]=zeros(Float64,niter)
trace["Œª‚ÇÄ"]=Dict()
trace["Œª‚ÇÅ"]=Dict()
trace["g"]=Dict()
trace["Œºg"]=Dict()
trace["Œºprior"]=Dict()
srand(2)
ftmp‚ÇÄ=lazyGP(f‚ÇÄ,≈Ç‚ÇÄ)
m‚ÇÄ = x -> Œº‚ÇÄ‚Çú(x)+ftmp‚ÇÄ(x)
Œª‚ÇÄ= x-> Œõ*Œ¶(m‚ÇÄ(x))
ftmp‚ÇÅ=lazyGP(f‚ÇÅ,≈Ç‚ÇÅ)
m‚ÇÅ = x-> Œº‚ÇÅ‚Çú(x)+ftmp‚ÇÅ(x)
Œª‚ÇÅ = x-> Œõ*Œ¶(m‚ÇÅ(x))
trueABtrials=deepcopy(ABtrials)
@showprogress 5 "Computing..." for iter=1:niter

	#Sample Realizations
	for trial in ABtrials
		Œû!(trial,m‚ÇÄ,Œª‚ÇÄ,m‚ÇÅ,Œª‚ÇÅ,≈Çg,œÅ¬≤g,Œõ)
	end

	empty!(y‚ÇÄ)
	[merge!(y‚ÇÄ,trial.y‚ÇÄ) for trial in ABtrials];
	≈Ç‚Çö=≈Ç‚ÇÄ+rand(Normal(0,0.1));
	if(log(rand(Uniform(0,1)))<sslogdensity(ms(y‚ÇÄ,Œº‚ÇÄ‚Çú),1.0,Œº‚ÇÄ,œÉ¬≤,≈Ç‚Çö,œÅ¬≤‚ÇÄ)-sslogdensity(ms(y‚ÇÄ,Œº‚ÇÄ‚Çú),1.0,Œº‚ÇÄ,œÉ¬≤,≈Ç‚ÇÄ,œÅ¬≤‚ÇÄ)+logpdf(Gamma(2,0.5),≈Ç‚Çö)-logpdf(Gamma(2,0.5),≈Ç‚ÇÄ))
		≈Ç‚ÇÄ=≈Ç‚Çö
	end
	œÅ¬≤‚Çö=œÅ¬≤‚ÇÄ+rand(Normal(0,0.1));
	if(log(rand(Uniform(0,1)))<sslogdensity(ms(y‚ÇÄ,Œº‚ÇÄ‚Çú),1.0,Œº‚ÇÄ,œÉ¬≤,≈Ç‚ÇÄ,œÅ¬≤‚Çö)-sslogdensity(ms(y‚ÇÄ,Œº‚ÇÄ‚Çú),1.0,Œº‚ÇÄ,œÉ¬≤,≈Ç‚ÇÄ,œÅ¬≤‚ÇÄ)+logpdf(Gamma(1,1/100),œÅ¬≤‚Çö)-logpdf(Gamma(1,1/100),œÅ¬≤‚ÇÄ))
		œÅ¬≤‚ÇÄ=œÅ¬≤‚Çö
	end
	f‚ÇÄ=lazyGP(FFBS(ms(y‚ÇÄ,Œº‚ÇÄ‚Çú),Œº‚ÇÄ,œÉ¬≤,≈Ç‚ÇÄ,œÅ¬≤‚ÇÄ),≈Ç‚ÇÄ)
	m‚ÇÄ= x->Œº‚ÇÄ‚Çú(x)+f‚ÇÄ(x)
	Œª‚ÇÄ= x-> Œõ*Œ¶(m‚ÇÄ(x))

	empty!(y‚ÇÅ)
	[merge!(y‚ÇÅ,trial.y‚ÇÅ) for trial in ABtrials];
	≈Ç‚Çö=≈Ç‚ÇÅ+rand(Normal(0,0.1));
	if(log(rand(Uniform(0,1)))<sslogdensity(ms(y‚ÇÅ,Œº‚ÇÅ‚Çú),1.0,Œº‚ÇÅ,œÉ¬≤,≈Ç‚Çö,œÅ¬≤‚ÇÅ)-sslogdensity(ms(y‚ÇÅ,Œº‚ÇÅ‚Çú),1.0,Œº‚ÇÅ,œÉ¬≤,≈Ç‚ÇÅ,œÅ¬≤‚ÇÅ)+logpdf(Gamma(2,0.5),≈Ç‚Çö)-logpdf(Gamma(2,0.5),≈Ç‚ÇÅ))
		≈Ç‚ÇÅ=≈Ç‚Çö
	end
	œÅ¬≤‚Çö=œÅ¬≤‚ÇÅ+rand(Normal(0,0.1));
	if(log(rand(Uniform(0,1)))<sslogdensity(ms(y‚ÇÅ,Œº‚ÇÅ‚Çú),1.0,Œº‚ÇÅ,œÉ¬≤,≈Ç‚ÇÅ,œÅ¬≤‚Çö)-sslogdensity(ms(y‚ÇÅ,Œº‚ÇÅ‚Çú),1.0,Œº‚ÇÅ,œÉ¬≤,≈Ç‚ÇÅ,œÅ¬≤‚ÇÅ)+logpdf(Gamma(1,1/100),œÅ¬≤‚Çö)-logpdf(Gamma(1,1/100),œÅ¬≤‚ÇÅ))
		œÅ¬≤‚ÇÅ=œÅ¬≤‚Çö
	end
	f‚ÇÅ=lazyGP(FFBS(ms(y‚ÇÅ,Œº‚ÇÅ‚Çú),Œº‚ÇÅ,œÉ¬≤,≈Ç‚ÇÅ,œÅ¬≤‚ÇÅ),≈Ç‚ÇÅ)
	m‚ÇÅ= x->Œº‚ÇÅ‚Çú(x)+f‚ÇÅ(x)
	Œª‚ÇÅ = x-> Œõ*Œ¶(m‚ÇÅ(x))

	for trial in ABtrials
		mulist=map(x->x.Œºprior,ABtrials)
		weights=map(x->logpdf(Normal(x,sqrt(k*œÉ¬≤‚Çò)),trial.Œºg),mulist)
		indx=find(map(x->x.id==trial.id,ABtrials))[1]
		weights[indx]=logpdf(Normal(0,sqrt((1+k)*œÉ¬≤‚Çò)),trial.Œºg)
		weights=exp(weights-maximum(weights))
		weights[indx]=weights[indx]*a
		weights=weights/sum(weights)
		sindx=rand(Categorical(weights))
		if(indx==sindx)
			trial.Œºprior=rand(Normal((1/(1/(k*œÉ¬≤‚Çò) + 1/œÉ¬≤‚Çò))*(trial.Œºg/(k*œÉ¬≤‚Çò)),sqrt(1/(1/(k*œÉ¬≤‚Çò) + (1/œÉ¬≤‚Çò))) ))
		else
			trial.Œºprior=mulist[sindx]
		end
	end

	for trial in ABtrials
		ùê∫!(trial,œÉ¬≤,k*œÉ¬≤‚Çò,≈Çg,œÅ¬≤g,p)
	end
	p=rand(Beta(1+sum(map(x->x.g·µß,ABtrials)),1+length(ABtrials)-sum(map(x->x.g·µß,ABtrials))))
	≈Çg‚Çö=≈Çg+rand(Normal(0,0.5));
	if(log(rand(Uniform(0,1)))<sum([sslogdensity(trial,œÉ¬≤,≈Çg‚Çö,œÅ¬≤g) for trial in ABtrials])-sum([sslogdensity(trial,œÉ¬≤,≈Çg,œÅ¬≤g) for trial in ABtrials])+logpdf(Gamma(1,1/5),≈Çg‚Çö)-logpdf(Gamma(1,1/5),≈Çg))
		≈Çg=≈Çg‚Çö
	end
	œÅ¬≤g‚Çö=œÅ¬≤g+rand(Normal(0,0.5));
	if(log(rand(Uniform(0,1)))<sum([sslogdensity(trial,œÉ¬≤,≈Çg,œÅ¬≤g‚Çö) for trial in ABtrials])-sum([sslogdensity(trial,œÉ¬≤,≈Çg,œÅ¬≤g) for trial in ABtrials])+logpdf(Gamma(3,1),œÅ¬≤g‚Çö)-logpdf(Gamma(3,1),œÅ¬≤g))
		œÅ¬≤g=œÅ¬≤g‚Çö
	end

	for i=1:length(ABtrials)
		trace["ABtrials"][i][iter]=ABtrials[i].g·µß
	end
	trace["œÅ¬≤g"][iter]=œÅ¬≤g
	trace["œÅ¬≤‚ÇÄ"][iter]=œÅ¬≤‚ÇÄ
	trace["œÅ¬≤‚ÇÅ"][iter]=œÅ¬≤‚ÇÅ
	trace["p"][iter]=p
	trace["≈Çg"][iter]=≈Çg
	trace["≈Ç‚ÇÄ"][iter]=≈Ç‚ÇÄ
	trace["≈Ç‚ÇÅ"][iter]=≈Ç‚ÇÅ
	trace["Œº‚ÇÄ"][iter]=Œº‚ÇÄ
	trace["Œº‚ÇÅ"][iter]=Œº‚ÇÅ
	trace["Œõ"][iter]=Œõ
	trace["Œª‚ÇÄ"][iter]=map(x->Œª‚ÇÄ(x),collect(0:0.01:1))
	trace["Œª‚ÇÅ"][iter]=map(x->Œª‚ÇÅ(x),collect(0:0.01:1))
	trace["g"][iter]=map(x->(x.g·µß==1 ? FFBS2(x.g,collect(0:0.01:1),≈Çg,œÅ¬≤g) : SortedDict(Dict(map(x->(x,zeros(Float64,3)),collect(0:0.01:1))))),ABtrials)
	#=trace["g"][iter]=map(x->FFBS2(x.g,collect(0:0.01:1),≈Çg,œÅ¬≤g),ABtrials)=#
	trace["Œºg"][iter]=map(x->x.Œºg,ABtrials)
	trace["Œºprior"][iter]=map(x->x.Œºprior,ABtrials)
end

n=length(ABtrials)
#=plt[:hist](map(x-> (@as _ rand(Categorical([ones(n)/(a+n);a/(a+n)])) (_ == (n+1) ? rand(Normal(0,sqrt((1+k)*œÉ¬≤‚Çò))) : rand(Normal(trace["Œºprior"][x][_],sqrt(k*œÉ¬≤‚Çò))))) , collect(1:niter)),100)=#
for iter=1:3030
	plot(collect(-3:0.01:3),map(y->(a/(a+n))*pdf(Normal(0,sqrt(1+k*œÉ¬≤‚Çò)),y)+sum(map(x-> (1/(a+n))*pdf(Normal(x,sqrt(k*œÉ¬≤‚Çò)),y),trace["Œºprior"][iter])),collect(-3:0.01:3)),alpha=0.1,c="blue")
end

	vec(map(x->trace["Œºg"][x],1:iter))
	figure(3)
	subplot(611)
	plot(trace["Œº‚ÇÄ"][1:iter],c="grey")
	subplot(612)
	plot(trace["≈Ç‚ÇÄ"][1:iter],c="grey")
	subplot(613)
	plot(trace["œÅ¬≤‚ÇÄ"][1:iter],c="grey")
	subplot(614)
	plot(trace["Œº‚ÇÅ"][1:iter],c="grey")
	subplot(615)
	plot(trace["≈Ç‚ÇÅ"][1:iter],c="grey")
	subplot(616)
	plot(trace["œÅ¬≤‚ÇÅ"][1:iter],c="grey")

	figure(11)
	subplot(211)
	plot(trace["≈Çg"][1:iter],c="grey")
	subplot(212)
	plot(trace["œÅ¬≤g"][1:iter],c="grey")

	figure(2)
	plot(trace["Œõ"][1:iter],c="grey")

	figure(4)
	subplot(611)
	plot(trace["ABtrials"][1][1:iter],c="grey")
	subplot(612)
	plot(trace["ABtrials"][2][1:iter],c="grey")
	subplot(613)
	plot(trace["ABtrials"][3][1:iter],c="grey")
	subplot(614)
	plot(trace["ABtrials"][4][1:iter],c="grey")
	subplot(615)
	plot(trace["ABtrials"][5][1:iter],c="grey")
	subplot(616)
	plot(trace["ABtrials"][6][1:iter],c="grey")

	figure()
	foo=zeros(0)
	for i=1:length(ABtrials)
		println(mean(trace["ABtrials"][i]))
		push!(foo,mean(trace["ABtrials"][i]))
	end
	plt[:hist](foo)

	figure()
	foo=zeros(0)
	for i=100:iter-1
		append!(foo,trace["Œºg"][i])
	end
	subplot(211)
	plt[:hist](foo,100)
	subplot(212)
	plt[:hist](Œ¶(foo),100)

	figure(1010)
	subplot(211)
	for i=collect(1:1:niter)
		#=plot(collect(keys(trace["f‚ÇÄ"][i])),[trace["f‚ÇÄ"][i][key][1] for key in collect(keys(trace["f‚ÇÄ"][i]))],c="grey",alpha=0.01)=#
		plot(trace["Œª‚ÇÄ"][i],c="blue",alpha=0.01)
	end
	subplot(212)
	for i=collect(1:1:niter)
		#=plot(collect(keys(trace["f‚ÇÅ"][i])),[trace["f‚ÇÅ"][i][key][1] for key in collect(keys(trace["f‚ÇÅ"][i]))],c="grey",alpha=0.01)=#
		plot(trace["Œª‚ÇÅ"][i],c="blue",alpha=0.01)
	end

	figure(1)
	subplot(211)
	for i=100:iter
		plot(collect(keys(trace["f‚ÇÄ"][i])),[trace["Œõ"][i]*Œ¶(trace["Œº‚ÇÄ"][i]+Œº‚ÇÄ‚Çú(key)+trace["f‚ÇÄ"][i][key][1]) for key in collect(keys(trace["f‚ÇÄ"][i]))],c="grey",alpha=0.01)
	end
	subplot(212)
	for i=100:iter
		plot(collect(keys(trace["f‚ÇÅ"][i])),[trace["Œõ"][i]*Œ¶(trace["Œº‚ÇÅ"][i]+Œº‚ÇÅ‚Çú(key)+trace["f‚ÇÅ"][i][key][1]) for key in collect(keys(trace["f‚ÇÅ"][i]))],c="grey",alpha=0.01)
	end
	for intAB=1:length(ABtrials)
	figure(intAB)
	subplot(311)
	for i=collect(1:1:niter)
		plot(collect(keys(trace["g"][i][intAB])),[(trace["g"][i][intAB][key][1]) for key in collect(keys(trace["g"][i][intAB]))],c="blue",alpha=0.01)
	end
	plot(collect(keys(trueABtrials[intAB].g)),[trueABtrials[intAB].g[key][1]*trueABtrials[intAB].g·µß for key in collect(keys(trueABtrials[intAB].g))],c="red")
	subplot(312)
	for i=collect(1:1:niter)
		plot(collect(1/1000:1/1000:1),trace["Œºg"][i][intAB]*ones(1000),c="blue",alpha=0.01)
	end
	plot(collect(1/1000:1/1000:1),trueABtrials[intAB].Œºg*ones(1000),c="red")
	subplot(313)
	for i=collect(1:1:niter)
		plot(collect(keys(trace["g"][i][intAB])),[Œ¶(trace["Œºg"][i][intAB]+trace["g"][i][intAB][key][1]) for key in collect(keys(trace["g"][i][intAB]))],c="blue",alpha=0.01)
	end
	plot(collect(keys(trueABtrials[intAB].g)),[Œ¶(trueABtrials[intAB].Œºg+trueABtrials[intAB].g[key][1]) for key in collect(keys(trueABtrials[intAB].g))],c="red")
	ylim(-0.1,1.1)
	savefig(string("plots/16/",intAB,".pdf"))
	close(intAB)
	end


	mean(trace["ABtrials"][intAB][1:iter])

	for i=100:iter
		plot(collect(keys(trace["g"][1][i])),[trace["Œõ"][i]*Œ¶(trace["Œº‚ÇÄ"][i]+Œº‚ÇÄ‚Çú(key)+trace["f‚ÇÄ"][i][key][1]) for key in collect(keys(trace["f‚ÇÄ"][i]))],c="grey",alpha=0.01)
	end

	plot(1:niter,[trace["Œºg"][key] for key in keys(trace["Œºg"])])
	Œª‚ÇÄmean=copy(trace["Œª‚ÇÄmean"])
	Œª‚ÇÅmean=copy(trace["Œª‚ÇÅmean"])
	Œª‚ÇÄvar=copy(trace["Œª‚ÇÄvar"])
	Œª‚ÇÅvar=copy(trace["Œª‚ÇÅvar"])
	Œª‚ÇÄu=copy(Œª‚ÇÄmean)
	Œª‚ÇÄb=copy(Œª‚ÇÄmean)
	Œª‚ÇÅu=copy(Œª‚ÇÅmean)
	Œª‚ÇÅb=copy(Œª‚ÇÅmean)
	for key in keys(Œª‚ÇÄmean)
		Œª‚ÇÄmean[key]=Œª‚ÇÄmean[key]/iter
		Œª‚ÇÄvar[key]=Œª‚ÇÄvar[key]/iter
		Œª‚ÇÄu[key]=Œª‚ÇÄmean[key]+2*sqrt(Œª‚ÇÄvar[key])
		Œª‚ÇÄb[key]=Œª‚ÇÄmean[key]-2*sqrt(Œª‚ÇÄvar[key])
	end
	for key in keys(Œª‚ÇÅmean)
		Œª‚ÇÅmean[key]=Œª‚ÇÅmean[key]/iter
		Œª‚ÇÅvar[key]=Œª‚ÇÅvar[key]/iter
		Œª‚ÇÅu[key]=Œª‚ÇÅmean[key]+2*sqrt(Œª‚ÇÅvar[key])
		Œª‚ÇÅb[key]=Œª‚ÇÅmean[key]-2*sqrt(Œª‚ÇÅvar[key])
	end

	figure(43)
	subplot(411)
	plot(sort(collect(keys(Œª‚ÇÄmean))),[Œª‚ÇÄmean[key] for key in sort(collect(keys(Œª‚ÇÄmean)))],c="blue")
	#=plot(sort(collect(keys(Œª‚ÇÄu))),[Œª‚ÇÄu[key] for key in sort(collect(keys(Œª‚ÇÄmean)))],linestyle="--",c="blue")=#
	#=plot(sort(collect(keys(Œª‚ÇÄb))),[Œª‚ÇÄb[key] for key in sort(collect(keys(Œª‚ÇÄmean)))],c="blue",linestyle="--")=#

	subplot(412)
	plt[:hist](vcat(map(x->collect(keys(x.Œæ‚ÇÄ‚Çê)),Atrials)...),100)
	subplot(413)
	plot(sort(collect(keys(Œª‚ÇÅmean))),[Œª‚ÇÅmean[key] for key in sort(collect(keys(Œª‚ÇÅmean)))],c="red")
	#=plot(sort(collect(keys(Œª‚ÇÅu))),[Œª‚ÇÅu[key] for key in sort(collect(keys(Œª‚ÇÅmean)))],linestyle="--",c="red")=#
	#=plot(sort(collect(keys(Œª‚ÇÅb))),[Œª‚ÇÅb[key] for key in sort(collect(keys(Œª‚ÇÅmean)))],c="red",linestyle="--")=#
	subplot(414)
	plt[:hist](vcat(map(x->collect(keys(x.Œæ‚ÇÅ‚Çê)),Btrials)...),100)



	figure(44)
		subplot(211)
		plt[:hist](vcat(map(x->collect(keys(x.Œæ‚ÇÄ‚Çê)),Atrials)...),100)
		ylim(0,50)
		subplot(212)
		plt[:hist](vcat(map(x->collect(keys(x.Œæ‚ÇÅ‚Çê)),Btrials)...),100)
		ylim(0,50)
